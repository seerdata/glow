# Copyright (c) 2015 Vault12, Inc.
# MIT License https://opensource.org/licenses/MIT

# Keys represents a public/secret key pair object as generated by js-nacl
Utils = require 'utils'

class Keys

  # constructs an object from the hashKeys object passed to it, or creates an
  # empty object.
  constructor: (hashKeys) ->
    return unless hashKeys
    Utils.extend @, hashKeys

  toString: ->
    JSON.stringify @constructor.keys2str @

  @fromString: (strKeys) ->
    return null unless strKeys
    @str2keys JSON.parse strKeys.trimLines()

  key2str: (strName) ->
    return null unless strName and @[strName]?
    @[strName].toBase64()

  strPubKey: ->
    @boxPk.toBase64()

  strSecKey: ->
    @boxSk.toBase64()

  equal: (k) ->
    return false unless @strPubKey() is k.strPubKey()
    return false if @boxSk? isnt k.boxSk?
    return @strSecKey() is k.strSecKey() if @boxSk?
    return true

  # Convert obj with UInt8Array to obj with strings
  @keys2str: (objKey) ->
    r = new Keys()
    for own k, v of objKey
      r[k] = v.toBase64()
    r

  # Convert obj with strings to obj with UInt8Array
  @str2keys: (strObj) ->
    r = new Keys()
    for own k, v of strObj
      r[k] = v.fromBase64()
    r

module.exports  = Keys
window.Keys = Keys if window.__CRYPTO_DEBUG
